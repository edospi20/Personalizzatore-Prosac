/*Clonare il branch(-b) di Github su una cartella locale*/
git clone -b gh-pages https://github.com/edospi20/Personalizzatore-Prosac.git .

/*Quando faccio git push per caricare la cartella locale sul web è necessario indicare
  anche un nome. Per settare il nome mi servo dello script gitConfig.sh. Quando faccio
  git push Prosac successivamente dovrei ogni volta inserire username e password, ma 
  con lo stesso script una volta inseriti una prima volta posso cacharli indicando
  il tempo per il quale cacharli.*/

/*Faccio partire lo script gitConfig.sh per configurare nome del repository da inserire 
  dopo git push e durata di username e password*/
  bash gitConfig.sh

/*Per scaricare il repository dal web*/
  git pull

/*Per aggiungere ai file che Git traccia come appartenenti al Repository*/
  git add nomefile [nomefile1] ... (-A per tutti)

/*Per fare il commit delle modifiche. Per salvare nel repository locale le modifiche effettuate. 
  Finché non faccio il commit i file aggiunti con add non fanno parte del Repository.
  In seguito a un commit si aprirà l'editor di testo VIM e si chiederà di inserire una breve 
  descrizione dei cambiamenti effettuati. (premere esc per passare alla modalità comandi, 
  e :wq per salvare e uscire)*/
  git commit -a

/*Per caricare il repository dalla cartella locale al web*/  
  git push Prosac

/*Per eliminare le modifiche fatte durante una sessione (e consentire di fare il pull)*/
  git stash

/*Per vedere i commit passati*/
  git log
 
/*Per tornare ad una certa versione del repository*/
  git reset --hard <SHA del commit> 
  lo SHA del commit lo copio dall' output del git log

  git reset [<mode>] [<commit>]
This form resets the current branch head to <commit> and possibly updates the index (resetting it to the tree of <commit>) and the working tree depending on <mode>. If <mode> is omitted, defaults to "--mixed". The <mode> must be one of the following:

--soft
Does not touch the index file or the working tree at all (but resets the head to <commit>, just like all modes do). This leaves all your changed files "Changes to be committed", as git status would put it.

--mixed
Resets the index but not the working tree (i.e., the changed files are preserved but not marked for commit) and reports what has not been updated. This is the default action.

If -N is specified, removed paths are marked as intent-to-add (see git-add(1)).

--hard
Resets the index and working tree. Any changes to tracked files in the working tree since <commit> are discarded.

--merge
Resets the index and updates the files in the working tree that are different between <commit> and HEAD, but keeps those which are different between the index and working tree (i.e. which have changes which have not been added). If a file that is different between <commit> and the index has unstaged changes, reset is aborted.

In other words, --merge does something like a git read-tree -u -m <commit>, but carries forward unmerged index entries.

--keep
Resets index entries and updates files in the working tree that are different between <commit> and HEAD. If a file that is different between <commit> and HEAD has local changes, reset is aborted.

